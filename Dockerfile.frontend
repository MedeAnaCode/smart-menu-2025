# build stage
FROM node:20-alpine AS build                          # используем Node для сборки
WORKDIR /app                                          # рабочая директория
COPY package.json package-lock.json ./                # копируем зависимости
RUN npm install                                       # устанавливаем их
COPY webpack.config.js ./                             # копируем конфиг вебпака
COPY src ./src                                        # копируем исходники
COPY public ./public                                  # и статические файлы
RUN npm run build                                     # собираем фронтенд

# production stage
FROM nginx:alpine                                     # минимальный образ nginx
COPY --from=build /app/dist /usr/share/nginx/html      # размещаем собранные файлы
COPY --from=build /app/public /usr/share/nginx/html    # копируем публичные ресурсы
COPY --from=build /app/src/fonts /usr/share/nginx/html/fonts # шрифты
COPY nginx.conf /etc/nginx/conf.d/default.conf         # свой конфиг nginx
EXPOSE 80                                              # отдаём сайт на 80 порту
CMD ["nginx", "-g", "daemon off;"]                     # запускаем nginx в фоне
